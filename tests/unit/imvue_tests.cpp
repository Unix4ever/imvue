// this file is automatically generated by ImVue tools

#include <gtest/gtest.h>
#include "imvue.h"
#include "utils.h"
const char* testDocumentSliderAngle =
"<template>"
  "<window name=\"test\">"
    "<slider-angle v-rad=\"0\">test</slider-angle>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderAngle)
{
  ImVue::Document document;
  document.parse(testDocumentSliderAngle);
  renderDocument(document);
}
const char* testDocumentGroup =
"<template>"
  "<window name=\"test\">"
    "<group ></group>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Group)
{
  ImVue::Document document;
  document.parse(testDocumentGroup);
  renderDocument(document);
}
const char* testDocumentInputInt3 =
"<template>"
  "<window name=\"test\">"
    "<input-int3 v=\"0,0,0\">test</input-int3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputInt3)
{
  ImVue::Document document;
  document.parse(testDocumentInputInt3);
  renderDocument(document);
}
const char* testDocumentInputDouble =
"<template>"
  "<window name=\"test\">"
    "<input-double v=\"0\">test</input-double>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputDouble)
{
  ImVue::Document document;
  document.parse(testDocumentInputDouble);
  renderDocument(document);
}
const char* testDocumentMenu =
"<template>"
  "<window name=\"test\">"
    "<menu label=\"test\"></menu>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Menu)
{
  ImVue::Document document;
  document.parse(testDocumentMenu);
  renderDocument(document);
}
const char* testDocumentMainMenuBar =
"<template>"
  "<window name=\"test\">"
    "<main-menu-bar ></main-menu-bar>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, MainMenuBar)
{
  ImVue::Document document;
  document.parse(testDocumentMainMenuBar);
  renderDocument(document);
}
const char* testDocumentNewLine =
"<template>"
  "<window name=\"test\">"
    "<new-line ></new-line>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, NewLine)
{
  ImVue::Document document;
  document.parse(testDocumentNewLine);
  renderDocument(document);
}
const char* testDocumentTooltip =
"<template>"
  "<window name=\"test\">"
    "<tooltip ></tooltip>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Tooltip)
{
  ImVue::Document document;
  document.parse(testDocumentTooltip);
  renderDocument(document);
}
const char* testDocumentDragInt3 =
"<template>"
  "<window name=\"test\">"
    "<drag-int3 ></drag-int3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragInt3)
{
  ImVue::Document document;
  document.parse(testDocumentDragInt3);
  renderDocument(document);
}
const char* testDocumentDragInt2 =
"<template>"
  "<window name=\"test\">"
    "<drag-int2 ></drag-int2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragInt2)
{
  ImVue::Document document;
  document.parse(testDocumentDragInt2);
  renderDocument(document);
}
const char* testDocumentWindow =
"<template>"
  "<window name=\"test\">"
    "<window name=\"test\"></window>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Window)
{
  ImVue::Document document;
  document.parse(testDocumentWindow);
  renderDocument(document);
}
const char* testDocumentSliderInt =
"<template>"
  "<window name=\"test\">"
    "<slider-int ></slider-int>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderInt)
{
  ImVue::Document document;
  document.parse(testDocumentSliderInt);
  renderDocument(document);
}
const char* testDocumentDragInt4 =
"<template>"
  "<window name=\"test\">"
    "<drag-int4 ></drag-int4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragInt4)
{
  ImVue::Document document;
  document.parse(testDocumentDragInt4);
  renderDocument(document);
}
const char* testDocumentInputFloat3 =
"<template>"
  "<window name=\"test\">"
    "<input-float3 ></input-float3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputFloat3)
{
  ImVue::Document document;
  document.parse(testDocumentInputFloat3);
  renderDocument(document);
}
const char* testDocumentInvisibleButton =
"<template>"
  "<window name=\"test\">"
    "<invisible-button str-id=\"test\" size=\"20.0,10.0\"></invisible-button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InvisibleButton)
{
  ImVue::Document document;
  document.parse(testDocumentInvisibleButton);
  renderDocument(document);
}
const char* testDocumentCombo =
"<template>"
  "<window name=\"test\">"
    "<combo label=\"test\"></combo>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Combo)
{
  ImVue::Document document;
  document.parse(testDocumentCombo);
  renderDocument(document);
}
const char* testDocumentMenuItem =
"<template>"
  "<window name=\"test\">"
    "<menu-item ></menu-item>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, MenuItem)
{
  ImVue::Document document;
  document.parse(testDocumentMenuItem);
  renderDocument(document);
}
const char* testDocumentSliderFloat3 =
"<template>"
  "<window name=\"test\">"
    "<slider-float3 ></slider-float3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderFloat3)
{
  ImVue::Document document;
  document.parse(testDocumentSliderFloat3);
  renderDocument(document);
}
const char* testDocumentSliderFloat2 =
"<template>"
  "<window name=\"test\">"
    "<slider-float2 ></slider-float2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderFloat2)
{
  ImVue::Document document;
  document.parse(testDocumentSliderFloat2);
  renderDocument(document);
}
const char* testDocumentSliderFloat4 =
"<template>"
  "<window name=\"test\">"
    "<slider-float4 ></slider-float4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderFloat4)
{
  ImVue::Document document;
  document.parse(testDocumentSliderFloat4);
  renderDocument(document);
}
const char* testDocumentComboItem =
"<template>"
  "<window name=\"test\">"
    "<combo-item ></combo-item>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ComboItem)
{
  ImVue::Document document;
  document.parse(testDocumentComboItem);
  renderDocument(document);
}
const char* testDocumentMenuBar =
"<template>"
  "<window name=\"test\">"
    "<menu-bar ></menu-bar>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, MenuBar)
{
  ImVue::Document document;
  document.parse(testDocumentMenuBar);
  renderDocument(document);
}
const char* testDocumentAlignTextToFramePadding =
"<template>"
  "<window name=\"test\">"
    "<align-text-to-frame-padding ></align-text-to-frame-padding>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, AlignTextToFramePadding)
{
  ImVue::Document document;
  document.parse(testDocumentAlignTextToFramePadding);
  renderDocument(document);
}
const char* testDocumentPopup =
"<template>"
  "<window name=\"test\">"
    "<popup ></popup>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Popup)
{
  ImVue::Document document;
  document.parse(testDocumentPopup);
  renderDocument(document);
}
const char* testDocumentPopupContextWindow =
"<template>"
  "<window name=\"test\">"
    "<popup-context-window ></popup-context-window>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, PopupContextWindow)
{
  ImVue::Document document;
  document.parse(testDocumentPopupContextWindow);
  renderDocument(document);
}
const char* testDocumentDragFloatRange2 =
"<template>"
  "<window name=\"test\">"
    "<drag-float-range2 v-current-min=\"0\" v-current-max=\"1\">test</drag-float-range2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragFloatRange2)
{
  ImVue::Document document;
  document.parse(testDocumentDragFloatRange2);
  renderDocument(document);
}
const char* testDocumentChildFrame =
"<template>"
  "<window name=\"test\">"
    "<child-frame id=\"None\"></child-frame>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ChildFrame)
{
  ImVue::Document document;
  document.parse(testDocumentChildFrame);
  renderDocument(document);
}
const char* testDocumentPlotLines =
"<template>"
  "<window name=\"test\">"
    "<plot-lines ></plot-lines>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, PlotLines)
{
  ImVue::Document document;
  document.parse(testDocumentPlotLines);
  renderDocument(document);
}
const char* testDocumentSpacing =
"<template>"
  "<window name=\"test\">"
    "<spacing ></spacing>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Spacing)
{
  ImVue::Document document;
  document.parse(testDocumentSpacing);
  renderDocument(document);
}
const char* testDocumentInputTextMultiline =
"<template>"
  "<window name=\"test\">"
    "<input-text-multiline ></input-text-multiline>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputTextMultiline)
{
  ImVue::Document document;
  document.parse(testDocumentInputTextMultiline);
  renderDocument(document);
}
const char* testDocumentSelectable =
"<template>"
  "<window name=\"test\">"
    "<selectable ></selectable>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Selectable)
{
  ImVue::Document document;
  document.parse(testDocumentSelectable);
  renderDocument(document);
}
const char* testDocumentDragDropTarget =
"<template>"
  "<window name=\"test\">"
    "<drag-drop-target ></drag-drop-target>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragDropTarget)
{
  ImVue::Document document;
  document.parse(testDocumentDragDropTarget);
  renderDocument(document);
}
const char* testDocumentColorEdit3 =
"<template>"
  "<window name=\"test\">"
    "<color-edit3 col=\"1.0,1.0,1.0\">test</color-edit3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ColorEdit3)
{
  ImVue::Document document;
  document.parse(testDocumentColorEdit3);
  renderDocument(document);
}
const char* testDocumentNextColumn =
"<template>"
  "<window name=\"test\">"
    "<next-column ></next-column>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, NextColumn)
{
  ImVue::Document document;
  document.parse(testDocumentNextColumn);
  renderDocument(document);
}
const char* testDocumentColorEdit4 =
"<template>"
  "<window name=\"test\">"
    "<color-edit4 col=\"1.0,1.0,1.0,1.0\">test</color-edit4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ColorEdit4)
{
  ImVue::Document document;
  document.parse(testDocumentColorEdit4);
  renderDocument(document);
}
const char* testDocumentSmallButton =
"<template>"
  "<window name=\"test\">"
    "<small-button >test</small-button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SmallButton)
{
  ImVue::Document document;
  document.parse(testDocumentSmallButton);
  renderDocument(document);
}
const char* testDocumentChild =
"<template>"
  "<window name=\"test\">"
    "<child str-id=\"test\"></child>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Child)
{
  ImVue::Document document;
  document.parse(testDocumentChild);
  renderDocument(document);
}
const char* testDocumentDragDropSource =
"<template>"
  "<window name=\"test\">"
    "<drag-drop-source ></drag-drop-source>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragDropSource)
{
  ImVue::Document document;
  document.parse(testDocumentDragDropSource);
  renderDocument(document);
}
const char* testDocumentPopupContextItem =
"<template>"
  "<window name=\"test\">"
    "<popup-context-item ></popup-context-item>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, PopupContextItem)
{
  ImVue::Document document;
  document.parse(testDocumentPopupContextItem);
  renderDocument(document);
}
const char* testDocumentInputInt =
"<template>"
  "<window name=\"test\">"
    "<input-int ></input-int>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputInt)
{
  ImVue::Document document;
  document.parse(testDocumentInputInt);
  renderDocument(document);
}
const char* testDocumentTabItem =
"<template>"
  "<window name=\"test\">"
    "<tab-bar str-id=\"test\"><tab-item label=\"test\"></tab-item></tab-bar>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, TabItem)
{
  ImVue::Document document;
  document.parse(testDocumentTabItem);
  renderDocument(document);
}
const char* testDocumentTabBar =
"<template>"
  "<window name=\"test\">"
    "<tab-bar str-id=\"test\"></tab-bar>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, TabBar)
{
  ImVue::Document document;
  document.parse(testDocumentTabBar);
  renderDocument(document);
}
const char* testDocumentDummy =
"<template>"
  "<window name=\"test\">"
    "<dummy ></dummy>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Dummy)
{
  ImVue::Document document;
  document.parse(testDocumentDummy);
  renderDocument(document);
}
const char* testDocumentUnindent =
"<template>"
  "<window name=\"test\">"
    "<unindent ></unindent>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Unindent)
{
  ImVue::Document document;
  document.parse(testDocumentUnindent);
  renderDocument(document);
}
const char* testDocumentIndent =
"<template>"
  "<window name=\"test\">"
    "<indent ></indent>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Indent)
{
  ImVue::Document document;
  document.parse(testDocumentIndent);
  renderDocument(document);
}
const char* testDocumentBullet =
"<template>"
  "<window name=\"test\">"
    "<bullet ></bullet>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Bullet)
{
  ImVue::Document document;
  document.parse(testDocumentBullet);
  renderDocument(document);
}
const char* testDocumentButton =
"<template>"
  "<window name=\"test\">"
    "<button >test</button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Button)
{
  ImVue::Document document;
  document.parse(testDocumentButton);
  renderDocument(document);
}
const char* testDocumentInputFloat2 =
"<template>"
  "<window name=\"test\">"
    "<input-float2 ></input-float2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputFloat2)
{
  ImVue::Document document;
  document.parse(testDocumentInputFloat2);
  renderDocument(document);
}
const char* testDocumentColorPicker4 =
"<template>"
  "<window name=\"test\">"
    "<color-picker4 col=\"1,1,1,1\"></color-picker4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ColorPicker4)
{
  ImVue::Document document;
  document.parse(testDocumentColorPicker4);
  renderDocument(document);
}
const char* testDocumentInputFloat =
"<template>"
  "<window name=\"test\">"
    "<input-float v=\"0\">test</input-float>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputFloat)
{
  ImVue::Document document;
  document.parse(testDocumentInputFloat);
  renderDocument(document);
}
const char* testDocumentRadioButton =
"<template>"
  "<window name=\"test\">"
    "<radio-button >test</radio-button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, RadioButton)
{
  ImVue::Document document;
  document.parse(testDocumentRadioButton);
  renderDocument(document);
}
const char* testDocumentCheckbox =
"<template>"
  "<window name=\"test\">"
    "<checkbox >test</checkbox>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Checkbox)
{
  ImVue::Document document;
  document.parse(testDocumentCheckbox);
  renderDocument(document);
}
const char* testDocumentSeparator =
"<template>"
  "<window name=\"test\">"
    "<separator ></separator>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Separator)
{
  ImVue::Document document;
  document.parse(testDocumentSeparator);
  renderDocument(document);
}
const char* testDocumentVSliderFloat =
"<template>"
  "<window name=\"test\">"
    "<v-slider-float v=\"0.0\">test</v-slider-float>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, VSliderFloat)
{
  ImVue::Document document;
  document.parse(testDocumentVSliderFloat);
  renderDocument(document);
}
const char* testDocumentPopupModal =
"<template>"
  "<window name=\"test\">"
    "<popup-modal name=\"test\"></popup-modal>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, PopupModal)
{
  ImVue::Document document;
  document.parse(testDocumentPopupModal);
  renderDocument(document);
}
const char* testDocumentDragFloat =
"<template>"
  "<window name=\"test\">"
    "<drag-float v=\"0\">test</drag-float>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragFloat)
{
  ImVue::Document document;
  document.parse(testDocumentDragFloat);
  renderDocument(document);
}
const char* testDocumentPopupContextVoid =
"<template>"
  "<window name=\"test\">"
    "<popup-context-void ></popup-context-void>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, PopupContextVoid)
{
  ImVue::Document document;
  document.parse(testDocumentPopupContextVoid);
  renderDocument(document);
}
const char* testDocumentColumns =
"<template>"
  "<window name=\"test\">"
    "<columns ></columns>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Columns)
{
  ImVue::Document document;
  document.parse(testDocumentColumns);
  renderDocument(document);
}
const char* testDocumentColorButton =
"<template>"
  "<window name=\"test\">"
    "<color-button desc-id=\"test\" col=\"1,1,1,1\"></color-button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ColorButton)
{
  ImVue::Document document;
  document.parse(testDocumentColorButton);
  renderDocument(document);
}
const char* testDocumentSliderInt4 =
"<template>"
  "<window name=\"test\">"
    "<slider-int4 ></slider-int4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderInt4)
{
  ImVue::Document document;
  document.parse(testDocumentSliderInt4);
  renderDocument(document);
}
const char* testDocumentPlotHistogram =
"<template>"
  "<window name=\"test\">"
    "<plot-histogram ></plot-histogram>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, PlotHistogram)
{
  ImVue::Document document;
  document.parse(testDocumentPlotHistogram);
  renderDocument(document);
}
const char* testDocumentTextUnformatted =
"<template>"
  "<window name=\"test\">"
    "<text-unformatted ></text-unformatted>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, TextUnformatted)
{
  ImVue::Document document;
  document.parse(testDocumentTextUnformatted);
  renderDocument(document);
}
const char* testDocumentInputInt2 =
"<template>"
  "<window name=\"test\">"
    "<input-int2 v=\"0,0\">test</input-int2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputInt2)
{
  ImVue::Document document;
  document.parse(testDocumentInputInt2);
  renderDocument(document);
}
const char* testDocumentSliderInt2 =
"<template>"
  "<window name=\"test\">"
    "<slider-int2 ></slider-int2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderInt2)
{
  ImVue::Document document;
  document.parse(testDocumentSliderInt2);
  renderDocument(document);
}
const char* testDocumentSliderInt3 =
"<template>"
  "<window name=\"test\">"
    "<slider-int3 ></slider-int3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderInt3)
{
  ImVue::Document document;
  document.parse(testDocumentSliderInt3);
  renderDocument(document);
}
const char* testDocumentImageButton =
"<template>"
  "<window name=\"test\">"
    "<image-button ></image-button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ImageButton)
{
  ImVue::Document document;
  document.parse(testDocumentImageButton);
  renderDocument(document);
}
const char* testDocumentDragFloat3 =
"<template>"
  "<window name=\"test\">"
    "<drag-float3 ></drag-float3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragFloat3)
{
  ImVue::Document document;
  document.parse(testDocumentDragFloat3);
  renderDocument(document);
}
const char* testDocumentImage =
"<template>"
  "<window name=\"test\">"
    "<image ></image>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, Image)
{
  ImVue::Document document;
  document.parse(testDocumentImage);
  renderDocument(document);
}
const char* testDocumentInputTextWithHint =
"<template>"
  "<window name=\"test\">"
    "<input-text-with-hint >test</input-text-with-hint>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputTextWithHint)
{
  ImVue::Document document;
  document.parse(testDocumentInputTextWithHint);
  renderDocument(document);
}
const char* testDocumentColorPicker3 =
"<template>"
  "<window name=\"test\">"
    "<color-picker3 col=\"1,1,1\"></color-picker3>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ColorPicker3)
{
  ImVue::Document document;
  document.parse(testDocumentColorPicker3);
  renderDocument(document);
}
const char* testDocumentDragFloat4 =
"<template>"
  "<window name=\"test\">"
    "<drag-float4 ></drag-float4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragFloat4)
{
  ImVue::Document document;
  document.parse(testDocumentDragFloat4);
  renderDocument(document);
}
const char* testDocumentProgressBar =
"<template>"
  "<window name=\"test\">"
    "<progress-bar ></progress-bar>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ProgressBar)
{
  ImVue::Document document;
  document.parse(testDocumentProgressBar);
  renderDocument(document);
}
const char* testDocumentDragFloat2 =
"<template>"
  "<window name=\"test\">"
    "<drag-float2 ></drag-float2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragFloat2)
{
  ImVue::Document document;
  document.parse(testDocumentDragFloat2);
  renderDocument(document);
}
const char* testDocumentVSliderInt =
"<template>"
  "<window name=\"test\">"
    "<v-slider-int ></v-slider-int>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, VSliderInt)
{
  ImVue::Document document;
  document.parse(testDocumentVSliderInt);
  renderDocument(document);
}
const char* testDocumentSameLine =
"<template>"
  "<window name=\"test\">"
    "<same-line ></same-line>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SameLine)
{
  ImVue::Document document;
  document.parse(testDocumentSameLine);
  renderDocument(document);
}
const char* testDocumentInputFloat4 =
"<template>"
  "<window name=\"test\">"
    "<input-float4 ></input-float4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputFloat4)
{
  ImVue::Document document;
  document.parse(testDocumentInputFloat4);
  renderDocument(document);
}
const char* testDocumentInputText =
"<template>"
  "<window name=\"test\">"
    "<input-text ></input-text>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputText)
{
  ImVue::Document document;
  document.parse(testDocumentInputText);
  renderDocument(document);
}
const char* testDocumentArrowButton =
"<template>"
  "<window name=\"test\">"
    "<arrow-button str-id=\"test\" dir=\"0\"></arrow-button>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, ArrowButton)
{
  ImVue::Document document;
  document.parse(testDocumentArrowButton);
  renderDocument(document);
}
const char* testDocumentSliderFloat =
"<template>"
  "<window name=\"test\">"
    "<slider-float v=\"0.0\">test</slider-float>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, SliderFloat)
{
  ImVue::Document document;
  document.parse(testDocumentSliderFloat);
  renderDocument(document);
}
const char* testDocumentInputInt4 =
"<template>"
  "<window name=\"test\">"
    "<input-int4 v=\"0,0,0,0\">test</input-int4>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, InputInt4)
{
  ImVue::Document document;
  document.parse(testDocumentInputInt4);
  renderDocument(document);
}
const char* testDocumentDragInt =
"<template>"
  "<window name=\"test\">"
    "<drag-int ></drag-int>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragInt)
{
  ImVue::Document document;
  document.parse(testDocumentDragInt);
  renderDocument(document);
}
const char* testDocumentDragIntRange2 =
"<template>"
  "<window name=\"test\">"
    "<drag-int-range2 ></drag-int-range2>"
  "</window>"
"</template>";

TEST(TestGeneratedElement, DragIntRange2)
{
  ImVue::Document document;
  document.parse(testDocumentDragIntRange2);
  renderDocument(document);
}